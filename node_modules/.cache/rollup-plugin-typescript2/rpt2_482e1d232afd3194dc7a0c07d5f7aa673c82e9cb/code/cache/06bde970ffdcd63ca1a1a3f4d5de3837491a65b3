{"code":"import { MutationMask, NoFlags, Placement } from \"./fiberFlags\";\nimport { appendChildToContainer } from \"../../react-dom/src/hostConfig\";\nimport { HostComponent, HostRoot, HostText } from \"./workTags\";\nlet nextEffect = null;\nexport const commitMutationEffects = (finishedWork) => {\n    nextEffect = finishedWork;\n    while (nextEffect !== null) {\n        // 向下遍历\n        const child = nextEffect.child;\n        if ((nextEffect.subtreeFlags & MutationMask) !== NoFlags &&\n            child !== null) {\n            nextEffect = child;\n        }\n        else {\n            // 向上遍历 DFS\n            up: while (nextEffect !== null) {\n                commitMutationEffectsOnFiber(nextEffect);\n                const sibling = nextEffect.sibling;\n                if (sibling !== null) {\n                    nextEffect = sibling;\n                    break up;\n                }\n                nextEffect = nextEffect.return;\n            }\n        }\n    }\n};\nfunction commitMutationEffectsOnFiber(finishedWork) {\n    const flags = finishedWork.flags;\n    if ((flags & Placement) !== NoFlags) {\n        commitPlacement(finishedWork);\n        finishedWork.flags &= ~Placement;\n    }\n}\nfunction commitPlacement(finishedWork) {\n    if (__DEV__) {\n        console.warn('执行Placement操作', finishedWork);\n    }\n    // parent DOM\n    const hostParent = getHostParent(finishedWork);\n    // finishedWork ~~ DOM\n    if (hostParent !== null) {\n        appendPlacementNodeIntoContainer(finishedWork, hostParent);\n    }\n}\nfunction getHostParent(fiber) {\n    let parent = fiber.return;\n    while (parent) {\n        const parentTag = parent.tag;\n        // HostComponent HostRoot\n        if (parentTag === HostComponent) {\n            return parent.stateNode;\n        }\n        if (parentTag === HostRoot) {\n            return parent.stateNode.container;\n        }\n        parent = parent.return;\n    }\n    if (__DEV__) {\n        console.warn('未找到host parent');\n    }\n    return null;\n}\nfunction appendPlacementNodeIntoContainer(finishedWork, hostParent) {\n    // fiber host\n    if (finishedWork.tag === HostComponent || finishedWork.tag === HostText) {\n        appendChildToContainer(hostParent, finishedWork.stateNode);\n        return;\n    }\n    const child = finishedWork.child;\n    if (child !== null) {\n        appendPlacementNodeIntoContainer(child, hostParent);\n        let sibling = child.sibling;\n        while (sibling !== null) {\n            appendPlacementNodeIntoContainer(sibling, hostParent);\n            sibling = sibling.sibling;\n        }\n    }\n}\nexport function commitRoot(root) {\n    const finishedWork = root.finishedWork;\n    if (finishedWork === null) {\n        return;\n    }\n    if (__DEV__) {\n        console.log('commit阶段开始', finishedWork);\n    }\n    // 重置\n    root.finishedWork = null;\n    // 判断是否存在3个子阶段需要执行的操作\n    const subtreeHasEffect = (finishedWork.subtreeFlags & MutationMask) !== NoFlags;\n    const rootHasEffect = (finishedWork.flags & MutationMask) !== NoFlags;\n    if (subtreeHasEffect || rootHasEffect) {\n        // beforeMutation\n        // mutation\n        commitMutationEffects(finishedWork);\n        root.current = finishedWork;\n        // layout\n    }\n    else {\n        root.current = finishedWork;\n    }\n}\n","references":["C:/syp/react18/packages/react/react-reconciler/src/fiber.ts","C:/syp/react18/packages/react/react-reconciler/src/fiberFlags.ts","C:/syp/react18/packages/react/react-dom/src/hostConfig.ts","C:/syp/react18/packages/react/react-reconciler/src/workTags.ts"]}
