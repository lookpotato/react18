[{"flatMessage":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","formatted":"\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m1\u001b[0m const supportSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\u001b[7m \u001b[0m \u001b[91m                             ~~~~~~\u001b[0m\r\n\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m1\u001b[0m const supportSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\u001b[7m \u001b[0m \u001b[91m                                                      ~~~~~~\u001b[0m\r\n\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m4\u001b[0m   ? Symbol.for('react.element')\r\n\u001b[7m \u001b[0m \u001b[91m    ~~~~~~\u001b[0m\r\n","category":1,"code":2585,"type":"semantic","fileLine":"C:/syp/react18/packages/shared/ReactSymbols.ts(1,30)"},{"flatMessage":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","formatted":"\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m1\u001b[0m const supportSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\u001b[7m \u001b[0m \u001b[91m                             ~~~~~~\u001b[0m\r\n\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m1\u001b[0m const supportSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\u001b[7m \u001b[0m \u001b[91m                                                      ~~~~~~\u001b[0m\r\n\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m4\u001b[0m   ? Symbol.for('react.element')\r\n\u001b[7m \u001b[0m \u001b[91m    ~~~~~~\u001b[0m\r\n","category":1,"code":2585,"type":"semantic","fileLine":"C:/syp/react18/packages/shared/ReactSymbols.ts(1,55)"},{"flatMessage":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","formatted":"\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m1\u001b[0m const supportSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\u001b[7m \u001b[0m \u001b[91m                             ~~~~~~\u001b[0m\r\n\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m1\u001b[0m const supportSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\u001b[7m \u001b[0m \u001b[91m                                                      ~~~~~~\u001b[0m\r\n\u001b[96mpackages/shared/ReactSymbols.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2585: \u001b[0m'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.\r\n\r\n\u001b[7m4\u001b[0m   ? Symbol.for('react.element')\r\n\u001b[7m \u001b[0m \u001b[91m    ~~~~~~\u001b[0m\r\n","category":1,"code":2585,"type":"semantic","fileLine":"C:/syp/react18/packages/shared/ReactSymbols.ts(4,5)"}]
