{
  "version": 3,
  "sources": ["../../../packages/shared/ReactSymbols.ts", "../../../packages/react/src/jsx.ts", "../../../packages/react/src/currentDispatcher.ts", "../../../packages/react/index.ts"],
  "sourcesContent": ["const supportSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\r\nexport const REACT_ELEMENT_TYPE = supportSymbol\r\n  ? Symbol.for('react.element')\r\n  : 0xeac7;\r\n", "import { REACT_ELEMENT_TYPE } from 'shared/ReactSymbols';\r\nimport {\r\n  Type,\r\n  Key,\r\n  Ref,\r\n  Props,\r\n  ReactElementType,\r\n  ElementType\r\n} from 'shared/ReactTypes';\r\n\r\nconst ReactElement = function (\r\n  type: Type,\r\n  key: Key,\r\n  ref: Ref,\r\n  props: Props\r\n): ReactElementType {\r\n  const element = {\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n    type,\r\n    key,\r\n    ref,\r\n    props,\r\n    __mark: 'KaSong'\r\n  };\r\n  return element;\r\n};\r\n\r\nexport const jsxDEV = (type: ElementType, config: any) => {\r\n  let key: Key = null;\r\n  const props: Props = {};\r\n  let ref: Ref = null;\r\n\r\n  for (const prop in config) {\r\n    const val = config[prop];\r\n    if (prop === 'key') {\r\n      if (val !== undefined) {\r\n        key = '' + val;\r\n      }\r\n      continue;\r\n    }\r\n    if (prop === 'ref') {\r\n      if (val !== undefined) {\r\n        ref = val;\r\n      }\r\n      continue;\r\n    }\r\n    if ({}.hasOwnProperty.call(config, prop)) {\r\n      props[prop] = val;\r\n    }\r\n  }\r\n\r\n  return ReactElement(type, key, ref, props);\r\n};\r\n", "import { Dispatch } from 'shared/ReactTypes';\r\n\r\nexport interface Dispatcher {\r\n  useState: <T>(initialState: T | (() => T)) => [T, Dispatch<T>];\r\n}\r\n\r\nconst currentDispatcher: { current: Dispatcher | null } = {\r\n  current: null\r\n};\r\n\r\nexport const resolveDispatcher = ():Dispatcher => {\r\n  const dispatcher = currentDispatcher.current;\r\n  if (dispatcher === null) {\r\n    throw new Error('Invalid hook call. Hook只能在函数组件中执行resolveDispatcher()报错');\r\n  }\r\n  return dispatcher;\r\n}\r\n\r\nexport default currentDispatcher;\r\n", "import { jsxDEV } from './src/jsx';\r\nimport { Dispatcher, resolveDispatcher } from './src/currentDispatcher';\r\nimport currentDispatcher from './src/currentDispatcher';\r\n\r\nexport const useState: Dispatcher['useState'] = (initialState: any) => {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n};\r\n\r\n// 内部数据共享层\r\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\r\n  currentDispatcher: currentDispatcher\r\n};\r\n\r\nexport default {\r\n  version: '0.0.0',\r\n  createElement: jsxDEV\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;AAAA,IAAM,gBAAgB,OAAO,WAAW,cAAc,OAAO;AAEtD,IAAM,qBAAqB,gBAC9B,OAAO,IAAI,eAAe,IAC1B;;;ACMJ,IAAM,eAAe,SACnB,MACA,KACA,KACA,OACkB;AAClB,QAAM,UAAU;AAAA,IACd,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EACV;AACA,SAAO;AACT;AAEO,IAAM,SAAS,CAAC,MAAmB,WAAgB;AACxD,MAAI,MAAW;AACf,QAAM,QAAe,CAAC;AACtB,MAAI,MAAW;AAEf,aAAW,QAAQ,QAAQ;AACzB,UAAM,MAAM,OAAO,IAAI;AACvB,QAAI,SAAS,OAAO;AAClB,UAAI,QAAQ,QAAW;AACrB,cAAM,KAAK;AAAA,MACb;AACA;AAAA,IACF;AACA,QAAI,SAAS,OAAO;AAClB,UAAI,QAAQ,QAAW;AACrB,cAAM;AAAA,MACR;AACA;AAAA,IACF;AACA,QAAI,CAAC,EAAE,eAAe,KAAK,QAAQ,IAAI,GAAG;AACxC,YAAM,IAAI,IAAI;AAAA,IAChB;AAAA,EACF;AAEA,SAAO,aAAa,MAAM,KAAK,KAAK,KAAK;AAC3C;;;AC9CA,IAAM,oBAAoD;AAAA,EACxD,SAAS;AACX;AAEO,IAAM,oBAAoB,MAAiB;AAChD,QAAM,aAAa,kBAAkB;AACrC,MAAI,eAAe,MAAM;AACvB,UAAM,IAAI,MAAM,wDAAwD;AAAA,EAC1E;AACA,SAAO;AACT;AAEA,IAAO,4BAAQ;;;ACdR,IAAM,WAAmC,CAAC,iBAAsB;AACrE,QAAM,aAAa,kBAAkB;AACrC,SAAO,WAAW,SAAS,YAAY;AACzC;AAGO,IAAM,qDAAqD;AAAA,EAChE,mBAAmB;AACrB;AAEA,IAAO,gBAAQ;AAAA,EACb,SAAS;AAAA,EACT,eAAe;AACjB;",
  "names": []
}
